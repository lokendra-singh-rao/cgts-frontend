
import {ref, getDownloadURL, uploadBytesResumable} from "firebase/storage"

const [imgUrl, setImgUrl] = useState(null);
const [progresspercent, setProgresspercent] = useState(0);

const uploadFile = (e) => {
  e.preventDefault();
  const file = e.target[0]?.files[0];

  if (!file) return;

  const storageRef = ref(storage, `users/{}/${file.name}`);
  const uploadTask = uploadBytesResumable(storageRef, file);

  uploadTask.on(
    "state_changed",
    (snapshot) => {
      const progress = Math.round(
        (snapshot.bytesTransferred / snapshot.totalBytes) * 100
      );
      setProgresspercent(progress);
    },
    (error) => {},
    () => {
      getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {
        setImgUrl(downloadURL);
      });
    }
  );
};

<div className="App">
<form className='form' onSubmit={(e) => uploadFile(e)}>
  <input type='file' />
  <button type='submit' >Upload</button>
  <a href={imgUrl}>Download Image</a>
</form>
</div>

export const storage = getStorage(app);
const appCheck = initializeAppCheck(app, {
  provider: new ReCaptchaV3Provider('123456'),
  isTokenAutoRefreshEnabled: true
});